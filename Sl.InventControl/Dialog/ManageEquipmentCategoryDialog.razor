@using Sl.InventControl.Data;

@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>        
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3 mb-n1"/>
            @Caption
        </MudText>        
    </TitleContent>
    
    <DialogContent>
        <MudPaper Class="pa-4 ma-4">
            <MudStack Row="true">
                <MudTooltip Text="Laptop">
                    <MudTextField @bind-Value="@type" TextUpdateSuppression="false" Label="Item Type" ReadOnly="false" />
                </MudTooltip>
                
                <MudTooltip Text="Lenovo">
                    <MudTextField @bind-Value="@make" TextUpdateSuppression="false" Label="Manufacturer" ReadOnly="false" /> <!--OnKeyDown="@(e => OnKeyDown(e))" />-->
                </MudTooltip>
                
                <MudTooltip Text="X1 Carbon">
                    <MudTextField @bind-Value="@model" TextUpdateSuppression="false" Label="Model" ReadOnly="false" /> <!--OnKeyDown="@(e => OnKeyDown(e))" />-->
                </MudTooltip>
                
                <MudIconButton Icon="@Icons.Material.Filled.Add" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Large" @onclick="@AddEquipmentType" />
            </MudStack>
        </MudPaper>

        <MudPaper Class="pa-4 ma-4">
            <MudTable Items="@categories" Dense="true" Hover="true">
                
                <HeaderContent>
                    <MudTh></MudTh>
                    <MudTh>Type</MudTh>
                    <MudTh>Make</MudTh>
                    <MudTh>Model</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Delete">
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Medium" @onclick="@(e => DeleteCategory(context))" />
                    </MudTd>
                    <MudTd DataLabel="Type">@context.Type</MudTd>
                    <MudTd DataLabel="Make">@context.Make</MudTd>
                    <MudTd DataLabel="Model">@context.Model</MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager />
                </PagerContent>
            </MudTable>
            
        </MudPaper>
    </DialogContent>
    
    
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Success" OnClick="ExecuteOkClick">OK</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] 
    public string Caption { get; set; } = "Manage equipment categories";

    [Parameter] 
    public string SnackbarInfo { get; set; } = "action confirmed";

    [Parameter]
    public List<EquipmentTypeModel> categories { get; set; } = new ();

    private string? type { get; set; }
    private string? make { get; set; }
    private string? model { get; set; }


    private void Cancel() {
        MudDialog.Cancel();
    }

    private void DeleteCategory(EquipmentTypeModel cat) {
        categories = categories.Where(c => !c.Id.Equals(cat.Id, StringComparison.InvariantCultureIgnoreCase)).ToList();
        StateHasChanged();
    }

    private void AddEquipmentType() {
        if (!string.IsNullOrWhiteSpace(type) && !string.IsNullOrWhiteSpace(make) && !string.IsNullOrWhiteSpace(model) &&
            !categories.Any(c => c.Type.Equals(type, StringComparison.InvariantCultureIgnoreCase) &&
            c.Make.Equals(make, StringComparison.InvariantCultureIgnoreCase) && 
            c.Model.Equals(model, StringComparison.InvariantCultureIgnoreCase))) {
                
                categories.Add(new EquipmentTypeModel { 
                    Type = type,
                    Make = make,
                    Model = model
                });

                type = make = model = "";
            StateHasChanged();
        }
    }

    private void ExecuteOkClick() {

        if (!categories.Any()) {
            Snackbar.Add("Please provide at least 1 item type", Severity.Warning);
        } else {

            Snackbar.Add(SnackbarInfo, Severity.Success);

            MudDialog.Close(DialogResult.Ok(categories));
        }

    }
}
